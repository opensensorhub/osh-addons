/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE SERIAL_UDB_EXTRA_F8 PACKING
package com.MAVLink.matrixpilot;

import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.Description;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;

/**
 * Backwards compatible version of SERIAL_UDB_EXTRA F8: format
 */
public class msg_serial_udb_extra_f8 extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F8 = 176;
    public static final int MAVLINK_MSG_LENGTH = 28;
    private static final long serialVersionUID = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F8;

    
    /**
     * Serial UDB Extra HEIGHT_TARGET_MAX
     */
    @Description("Serial UDB Extra HEIGHT_TARGET_MAX")
    @Units("")
    public float sue_HEIGHT_TARGET_MAX;
    
    /**
     * Serial UDB Extra HEIGHT_TARGET_MIN
     */
    @Description("Serial UDB Extra HEIGHT_TARGET_MIN")
    @Units("")
    public float sue_HEIGHT_TARGET_MIN;
    
    /**
     * Serial UDB Extra ALT_HOLD_THROTTLE_MIN
     */
    @Description("Serial UDB Extra ALT_HOLD_THROTTLE_MIN")
    @Units("")
    public float sue_ALT_HOLD_THROTTLE_MIN;
    
    /**
     * Serial UDB Extra ALT_HOLD_THROTTLE_MAX
     */
    @Description("Serial UDB Extra ALT_HOLD_THROTTLE_MAX")
    @Units("")
    public float sue_ALT_HOLD_THROTTLE_MAX;
    
    /**
     * Serial UDB Extra ALT_HOLD_PITCH_MIN
     */
    @Description("Serial UDB Extra ALT_HOLD_PITCH_MIN")
    @Units("")
    public float sue_ALT_HOLD_PITCH_MIN;
    
    /**
     * Serial UDB Extra ALT_HOLD_PITCH_MAX
     */
    @Description("Serial UDB Extra ALT_HOLD_PITCH_MAX")
    @Units("")
    public float sue_ALT_HOLD_PITCH_MAX;
    
    /**
     * Serial UDB Extra ALT_HOLD_PITCH_HIGH
     */
    @Description("Serial UDB Extra ALT_HOLD_PITCH_HIGH")
    @Units("")
    public float sue_ALT_HOLD_PITCH_HIGH;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F8;

        packet.payload.putFloat(sue_HEIGHT_TARGET_MAX);
        packet.payload.putFloat(sue_HEIGHT_TARGET_MIN);
        packet.payload.putFloat(sue_ALT_HOLD_THROTTLE_MIN);
        packet.payload.putFloat(sue_ALT_HOLD_THROTTLE_MAX);
        packet.payload.putFloat(sue_ALT_HOLD_PITCH_MIN);
        packet.payload.putFloat(sue_ALT_HOLD_PITCH_MAX);
        packet.payload.putFloat(sue_ALT_HOLD_PITCH_HIGH);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a serial_udb_extra_f8 message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.sue_HEIGHT_TARGET_MAX = payload.getFloat();
        this.sue_HEIGHT_TARGET_MIN = payload.getFloat();
        this.sue_ALT_HOLD_THROTTLE_MIN = payload.getFloat();
        this.sue_ALT_HOLD_THROTTLE_MAX = payload.getFloat();
        this.sue_ALT_HOLD_PITCH_MIN = payload.getFloat();
        this.sue_ALT_HOLD_PITCH_MAX = payload.getFloat();
        this.sue_ALT_HOLD_PITCH_HIGH = payload.getFloat();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_serial_udb_extra_f8() {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F8;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_serial_udb_extra_f8( float sue_HEIGHT_TARGET_MAX, float sue_HEIGHT_TARGET_MIN, float sue_ALT_HOLD_THROTTLE_MIN, float sue_ALT_HOLD_THROTTLE_MAX, float sue_ALT_HOLD_PITCH_MIN, float sue_ALT_HOLD_PITCH_MAX, float sue_ALT_HOLD_PITCH_HIGH) {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F8;

        this.sue_HEIGHT_TARGET_MAX = sue_HEIGHT_TARGET_MAX;
        this.sue_HEIGHT_TARGET_MIN = sue_HEIGHT_TARGET_MIN;
        this.sue_ALT_HOLD_THROTTLE_MIN = sue_ALT_HOLD_THROTTLE_MIN;
        this.sue_ALT_HOLD_THROTTLE_MAX = sue_ALT_HOLD_THROTTLE_MAX;
        this.sue_ALT_HOLD_PITCH_MIN = sue_ALT_HOLD_PITCH_MIN;
        this.sue_ALT_HOLD_PITCH_MAX = sue_ALT_HOLD_PITCH_MAX;
        this.sue_ALT_HOLD_PITCH_HIGH = sue_ALT_HOLD_PITCH_HIGH;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_serial_udb_extra_f8( float sue_HEIGHT_TARGET_MAX, float sue_HEIGHT_TARGET_MIN, float sue_ALT_HOLD_THROTTLE_MIN, float sue_ALT_HOLD_THROTTLE_MAX, float sue_ALT_HOLD_PITCH_MIN, float sue_ALT_HOLD_PITCH_MAX, float sue_ALT_HOLD_PITCH_HIGH, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F8;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.sue_HEIGHT_TARGET_MAX = sue_HEIGHT_TARGET_MAX;
        this.sue_HEIGHT_TARGET_MIN = sue_HEIGHT_TARGET_MIN;
        this.sue_ALT_HOLD_THROTTLE_MIN = sue_ALT_HOLD_THROTTLE_MIN;
        this.sue_ALT_HOLD_THROTTLE_MAX = sue_ALT_HOLD_THROTTLE_MAX;
        this.sue_ALT_HOLD_PITCH_MIN = sue_ALT_HOLD_PITCH_MIN;
        this.sue_ALT_HOLD_PITCH_MAX = sue_ALT_HOLD_PITCH_MAX;
        this.sue_ALT_HOLD_PITCH_HIGH = sue_ALT_HOLD_PITCH_HIGH;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_serial_udb_extra_f8(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F8;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

                  
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F8 - sysid:"+sysid+" compid:"+compid+" sue_HEIGHT_TARGET_MAX:"+sue_HEIGHT_TARGET_MAX+" sue_HEIGHT_TARGET_MIN:"+sue_HEIGHT_TARGET_MIN+" sue_ALT_HOLD_THROTTLE_MIN:"+sue_ALT_HOLD_THROTTLE_MIN+" sue_ALT_HOLD_THROTTLE_MAX:"+sue_ALT_HOLD_THROTTLE_MAX+" sue_ALT_HOLD_PITCH_MIN:"+sue_ALT_HOLD_PITCH_MIN+" sue_ALT_HOLD_PITCH_MAX:"+sue_ALT_HOLD_PITCH_MAX+" sue_ALT_HOLD_PITCH_HIGH:"+sue_ALT_HOLD_PITCH_HIGH+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F8";
    }
}
        