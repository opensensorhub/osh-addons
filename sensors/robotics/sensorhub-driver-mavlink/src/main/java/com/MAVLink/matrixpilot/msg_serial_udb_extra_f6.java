/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE SERIAL_UDB_EXTRA_F6 PACKING
package com.MAVLink.matrixpilot;

import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.Description;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;

/**
 * Backwards compatible version of SERIAL_UDB_EXTRA F6: format
 */
public class msg_serial_udb_extra_f6 extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F6 = 174;
    public static final int MAVLINK_MSG_LENGTH = 20;
    private static final long serialVersionUID = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F6;

    
    /**
     * Serial UDB Extra PITCHGAIN Proportional Control
     */
    @Description("Serial UDB Extra PITCHGAIN Proportional Control")
    @Units("")
    public float sue_PITCHGAIN;
    
    /**
     * Serial UDB Extra Pitch Rate Control
     */
    @Description("Serial UDB Extra Pitch Rate Control")
    @Units("")
    public float sue_PITCHKD;
    
    /**
     * Serial UDB Extra Rudder to Elevator Mix
     */
    @Description("Serial UDB Extra Rudder to Elevator Mix")
    @Units("")
    public float sue_RUDDER_ELEV_MIX;
    
    /**
     * Serial UDB Extra Roll to Elevator Mix
     */
    @Description("Serial UDB Extra Roll to Elevator Mix")
    @Units("")
    public float sue_ROLL_ELEV_MIX;
    
    /**
     * Gain For Boosting Manual Elevator control When Plane Stabilized
     */
    @Description("Gain For Boosting Manual Elevator control When Plane Stabilized")
    @Units("")
    public float sue_ELEVATOR_BOOST;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F6;

        packet.payload.putFloat(sue_PITCHGAIN);
        packet.payload.putFloat(sue_PITCHKD);
        packet.payload.putFloat(sue_RUDDER_ELEV_MIX);
        packet.payload.putFloat(sue_ROLL_ELEV_MIX);
        packet.payload.putFloat(sue_ELEVATOR_BOOST);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a serial_udb_extra_f6 message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.sue_PITCHGAIN = payload.getFloat();
        this.sue_PITCHKD = payload.getFloat();
        this.sue_RUDDER_ELEV_MIX = payload.getFloat();
        this.sue_ROLL_ELEV_MIX = payload.getFloat();
        this.sue_ELEVATOR_BOOST = payload.getFloat();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_serial_udb_extra_f6() {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F6;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_serial_udb_extra_f6( float sue_PITCHGAIN, float sue_PITCHKD, float sue_RUDDER_ELEV_MIX, float sue_ROLL_ELEV_MIX, float sue_ELEVATOR_BOOST) {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F6;

        this.sue_PITCHGAIN = sue_PITCHGAIN;
        this.sue_PITCHKD = sue_PITCHKD;
        this.sue_RUDDER_ELEV_MIX = sue_RUDDER_ELEV_MIX;
        this.sue_ROLL_ELEV_MIX = sue_ROLL_ELEV_MIX;
        this.sue_ELEVATOR_BOOST = sue_ELEVATOR_BOOST;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_serial_udb_extra_f6( float sue_PITCHGAIN, float sue_PITCHKD, float sue_RUDDER_ELEV_MIX, float sue_ROLL_ELEV_MIX, float sue_ELEVATOR_BOOST, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F6;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.sue_PITCHGAIN = sue_PITCHGAIN;
        this.sue_PITCHKD = sue_PITCHKD;
        this.sue_RUDDER_ELEV_MIX = sue_RUDDER_ELEV_MIX;
        this.sue_ROLL_ELEV_MIX = sue_ROLL_ELEV_MIX;
        this.sue_ELEVATOR_BOOST = sue_ELEVATOR_BOOST;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_serial_udb_extra_f6(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F6;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

              
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F6 - sysid:"+sysid+" compid:"+compid+" sue_PITCHGAIN:"+sue_PITCHGAIN+" sue_PITCHKD:"+sue_PITCHKD+" sue_RUDDER_ELEV_MIX:"+sue_RUDDER_ELEV_MIX+" sue_ROLL_ELEV_MIX:"+sue_ROLL_ELEV_MIX+" sue_ELEVATOR_BOOST:"+sue_ELEVATOR_BOOST+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F6";
    }
}
        