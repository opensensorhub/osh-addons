/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE FLEXIFUNCTION_BUFFER_FUNCTION PACKING
package com.MAVLink.matrixpilot;

import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.Description;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;

/**
 * Flexifunction type and parameters for component at function index from buffer
 */
public class msg_flexifunction_buffer_function extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_FLEXIFUNCTION_BUFFER_FUNCTION = 152;
    public static final int MAVLINK_MSG_LENGTH = 58;
    private static final long serialVersionUID = MAVLINK_MSG_ID_FLEXIFUNCTION_BUFFER_FUNCTION;

    
    /**
     * Function index
     */
    @Description("Function index")
    @Units("")
    public int func_index;
    
    /**
     * Total count of functions
     */
    @Description("Total count of functions")
    @Units("")
    public int func_count;
    
    /**
     * Address in the flexifunction data, Set to 0xFFFF to use address in target memory
     */
    @Description("Address in the flexifunction data, Set to 0xFFFF to use address in target memory")
    @Units("")
    public int data_address;
    
    /**
     * Size of the 
     */
    @Description("Size of the ")
    @Units("")
    public int data_size;
    
    /**
     * System ID
     */
    @Description("System ID")
    @Units("")
    public short target_system;
    
    /**
     * Component ID
     */
    @Description("Component ID")
    @Units("")
    public short target_component;
    
    /**
     * Settings data
     */
    @Description("Settings data")
    @Units("")
    public byte data[] = new byte[48];
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_FLEXIFUNCTION_BUFFER_FUNCTION;

        packet.payload.putUnsignedShort(func_index);
        packet.payload.putUnsignedShort(func_count);
        packet.payload.putUnsignedShort(data_address);
        packet.payload.putUnsignedShort(data_size);
        packet.payload.putUnsignedByte(target_system);
        packet.payload.putUnsignedByte(target_component);
        
        for (int i = 0; i < data.length; i++) {
            packet.payload.putByte(data[i]);
        }
                    
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a flexifunction_buffer_function message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.func_index = payload.getUnsignedShort();
        this.func_count = payload.getUnsignedShort();
        this.data_address = payload.getUnsignedShort();
        this.data_size = payload.getUnsignedShort();
        this.target_system = payload.getUnsignedByte();
        this.target_component = payload.getUnsignedByte();
        
        for (int i = 0; i < this.data.length; i++) {
            this.data[i] = payload.getByte();
        }
                
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_flexifunction_buffer_function() {
        this.msgid = MAVLINK_MSG_ID_FLEXIFUNCTION_BUFFER_FUNCTION;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_flexifunction_buffer_function( int func_index, int func_count, int data_address, int data_size, short target_system, short target_component, byte[] data) {
        this.msgid = MAVLINK_MSG_ID_FLEXIFUNCTION_BUFFER_FUNCTION;

        this.func_index = func_index;
        this.func_count = func_count;
        this.data_address = data_address;
        this.data_size = data_size;
        this.target_system = target_system;
        this.target_component = target_component;
        this.data = data;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_flexifunction_buffer_function( int func_index, int func_count, int data_address, int data_size, short target_system, short target_component, byte[] data, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_FLEXIFUNCTION_BUFFER_FUNCTION;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.func_index = func_index;
        this.func_count = func_count;
        this.data_address = data_address;
        this.data_size = data_size;
        this.target_system = target_system;
        this.target_component = target_component;
        this.data = data;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_flexifunction_buffer_function(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_FLEXIFUNCTION_BUFFER_FUNCTION;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

                  
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_FLEXIFUNCTION_BUFFER_FUNCTION - sysid:"+sysid+" compid:"+compid+" func_index:"+func_index+" func_count:"+func_count+" data_address:"+data_address+" data_size:"+data_size+" target_system:"+target_system+" target_component:"+target_component+" data:"+data+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_FLEXIFUNCTION_BUFFER_FUNCTION";
    }
}
        