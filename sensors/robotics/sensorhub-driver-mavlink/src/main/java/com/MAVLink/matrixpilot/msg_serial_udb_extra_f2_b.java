/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE SERIAL_UDB_EXTRA_F2_B PACKING
package com.MAVLink.matrixpilot;

import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.Description;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;

/**
 * Backwards compatible version of SERIAL_UDB_EXTRA - F2: Part B
 */
public class msg_serial_udb_extra_f2_b extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F2_B = 171;
    public static final int MAVLINK_MSG_LENGTH = 108;
    private static final long serialVersionUID = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F2_B;

    
    /**
     * Serial UDB Extra Time
     */
    @Description("Serial UDB Extra Time")
    @Units("")
    public long sue_time;
    
    /**
     * Serial UDB Extra Status Flags
     */
    @Description("Serial UDB Extra Status Flags")
    @Units("")
    public long sue_flags;
    
    /**
     * SUE barometer pressure
     */
    @Description("SUE barometer pressure")
    @Units("")
    public int sue_barom_press;
    
    /**
     * SUE barometer altitude
     */
    @Description("SUE barometer altitude")
    @Units("")
    public int sue_barom_alt;
    
    /**
     * Serial UDB Extra PWM Input Channel 1
     */
    @Description("Serial UDB Extra PWM Input Channel 1")
    @Units("")
    public short sue_pwm_input_1;
    
    /**
     * Serial UDB Extra PWM Input Channel 2
     */
    @Description("Serial UDB Extra PWM Input Channel 2")
    @Units("")
    public short sue_pwm_input_2;
    
    /**
     * Serial UDB Extra PWM Input Channel 3
     */
    @Description("Serial UDB Extra PWM Input Channel 3")
    @Units("")
    public short sue_pwm_input_3;
    
    /**
     * Serial UDB Extra PWM Input Channel 4
     */
    @Description("Serial UDB Extra PWM Input Channel 4")
    @Units("")
    public short sue_pwm_input_4;
    
    /**
     * Serial UDB Extra PWM Input Channel 5
     */
    @Description("Serial UDB Extra PWM Input Channel 5")
    @Units("")
    public short sue_pwm_input_5;
    
    /**
     * Serial UDB Extra PWM Input Channel 6
     */
    @Description("Serial UDB Extra PWM Input Channel 6")
    @Units("")
    public short sue_pwm_input_6;
    
    /**
     * Serial UDB Extra PWM Input Channel 7
     */
    @Description("Serial UDB Extra PWM Input Channel 7")
    @Units("")
    public short sue_pwm_input_7;
    
    /**
     * Serial UDB Extra PWM Input Channel 8
     */
    @Description("Serial UDB Extra PWM Input Channel 8")
    @Units("")
    public short sue_pwm_input_8;
    
    /**
     * Serial UDB Extra PWM Input Channel 9
     */
    @Description("Serial UDB Extra PWM Input Channel 9")
    @Units("")
    public short sue_pwm_input_9;
    
    /**
     * Serial UDB Extra PWM Input Channel 10
     */
    @Description("Serial UDB Extra PWM Input Channel 10")
    @Units("")
    public short sue_pwm_input_10;
    
    /**
     * Serial UDB Extra PWM Input Channel 11
     */
    @Description("Serial UDB Extra PWM Input Channel 11")
    @Units("")
    public short sue_pwm_input_11;
    
    /**
     * Serial UDB Extra PWM Input Channel 12
     */
    @Description("Serial UDB Extra PWM Input Channel 12")
    @Units("")
    public short sue_pwm_input_12;
    
    /**
     * Serial UDB Extra PWM Output Channel 1
     */
    @Description("Serial UDB Extra PWM Output Channel 1")
    @Units("")
    public short sue_pwm_output_1;
    
    /**
     * Serial UDB Extra PWM Output Channel 2
     */
    @Description("Serial UDB Extra PWM Output Channel 2")
    @Units("")
    public short sue_pwm_output_2;
    
    /**
     * Serial UDB Extra PWM Output Channel 3
     */
    @Description("Serial UDB Extra PWM Output Channel 3")
    @Units("")
    public short sue_pwm_output_3;
    
    /**
     * Serial UDB Extra PWM Output Channel 4
     */
    @Description("Serial UDB Extra PWM Output Channel 4")
    @Units("")
    public short sue_pwm_output_4;
    
    /**
     * Serial UDB Extra PWM Output Channel 5
     */
    @Description("Serial UDB Extra PWM Output Channel 5")
    @Units("")
    public short sue_pwm_output_5;
    
    /**
     * Serial UDB Extra PWM Output Channel 6
     */
    @Description("Serial UDB Extra PWM Output Channel 6")
    @Units("")
    public short sue_pwm_output_6;
    
    /**
     * Serial UDB Extra PWM Output Channel 7
     */
    @Description("Serial UDB Extra PWM Output Channel 7")
    @Units("")
    public short sue_pwm_output_7;
    
    /**
     * Serial UDB Extra PWM Output Channel 8
     */
    @Description("Serial UDB Extra PWM Output Channel 8")
    @Units("")
    public short sue_pwm_output_8;
    
    /**
     * Serial UDB Extra PWM Output Channel 9
     */
    @Description("Serial UDB Extra PWM Output Channel 9")
    @Units("")
    public short sue_pwm_output_9;
    
    /**
     * Serial UDB Extra PWM Output Channel 10
     */
    @Description("Serial UDB Extra PWM Output Channel 10")
    @Units("")
    public short sue_pwm_output_10;
    
    /**
     * Serial UDB Extra PWM Output Channel 11
     */
    @Description("Serial UDB Extra PWM Output Channel 11")
    @Units("")
    public short sue_pwm_output_11;
    
    /**
     * Serial UDB Extra PWM Output Channel 12
     */
    @Description("Serial UDB Extra PWM Output Channel 12")
    @Units("")
    public short sue_pwm_output_12;
    
    /**
     * Serial UDB Extra IMU Location X
     */
    @Description("Serial UDB Extra IMU Location X")
    @Units("")
    public short sue_imu_location_x;
    
    /**
     * Serial UDB Extra IMU Location Y
     */
    @Description("Serial UDB Extra IMU Location Y")
    @Units("")
    public short sue_imu_location_y;
    
    /**
     * Serial UDB Extra IMU Location Z
     */
    @Description("Serial UDB Extra IMU Location Z")
    @Units("")
    public short sue_imu_location_z;
    
    /**
     * Serial UDB Location Error Earth X
     */
    @Description("Serial UDB Location Error Earth X")
    @Units("")
    public short sue_location_error_earth_x;
    
    /**
     * Serial UDB Location Error Earth Y
     */
    @Description("Serial UDB Location Error Earth Y")
    @Units("")
    public short sue_location_error_earth_y;
    
    /**
     * Serial UDB Location Error Earth Z
     */
    @Description("Serial UDB Location Error Earth Z")
    @Units("")
    public short sue_location_error_earth_z;
    
    /**
     * Serial UDB Extra Oscillator Failure Count
     */
    @Description("Serial UDB Extra Oscillator Failure Count")
    @Units("")
    public short sue_osc_fails;
    
    /**
     * Serial UDB Extra IMU Velocity X
     */
    @Description("Serial UDB Extra IMU Velocity X")
    @Units("")
    public short sue_imu_velocity_x;
    
    /**
     * Serial UDB Extra IMU Velocity Y
     */
    @Description("Serial UDB Extra IMU Velocity Y")
    @Units("")
    public short sue_imu_velocity_y;
    
    /**
     * Serial UDB Extra IMU Velocity Z
     */
    @Description("Serial UDB Extra IMU Velocity Z")
    @Units("")
    public short sue_imu_velocity_z;
    
    /**
     * Serial UDB Extra Current Waypoint Goal X
     */
    @Description("Serial UDB Extra Current Waypoint Goal X")
    @Units("")
    public short sue_waypoint_goal_x;
    
    /**
     * Serial UDB Extra Current Waypoint Goal Y
     */
    @Description("Serial UDB Extra Current Waypoint Goal Y")
    @Units("")
    public short sue_waypoint_goal_y;
    
    /**
     * Serial UDB Extra Current Waypoint Goal Z
     */
    @Description("Serial UDB Extra Current Waypoint Goal Z")
    @Units("")
    public short sue_waypoint_goal_z;
    
    /**
     * Aeroforce in UDB X Axis
     */
    @Description("Aeroforce in UDB X Axis")
    @Units("")
    public short sue_aero_x;
    
    /**
     * Aeroforce in UDB Y Axis
     */
    @Description("Aeroforce in UDB Y Axis")
    @Units("")
    public short sue_aero_y;
    
    /**
     * Aeroforce in UDB Z axis
     */
    @Description("Aeroforce in UDB Z axis")
    @Units("")
    public short sue_aero_z;
    
    /**
     * SUE barometer temperature
     */
    @Description("SUE barometer temperature")
    @Units("")
    public short sue_barom_temp;
    
    /**
     * SUE battery voltage
     */
    @Description("SUE battery voltage")
    @Units("")
    public short sue_bat_volt;
    
    /**
     * SUE battery current
     */
    @Description("SUE battery current")
    @Units("")
    public short sue_bat_amp;
    
    /**
     * SUE battery milli amp hours used
     */
    @Description("SUE battery milli amp hours used")
    @Units("")
    public short sue_bat_amp_hours;
    
    /**
     * Sue autopilot desired height
     */
    @Description("Sue autopilot desired height")
    @Units("")
    public short sue_desired_height;
    
    /**
     * Serial UDB Extra Stack Memory Free
     */
    @Description("Serial UDB Extra Stack Memory Free")
    @Units("")
    public short sue_memory_stack_free;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F2_B;

        packet.payload.putUnsignedInt(sue_time);
        packet.payload.putUnsignedInt(sue_flags);
        packet.payload.putInt(sue_barom_press);
        packet.payload.putInt(sue_barom_alt);
        packet.payload.putShort(sue_pwm_input_1);
        packet.payload.putShort(sue_pwm_input_2);
        packet.payload.putShort(sue_pwm_input_3);
        packet.payload.putShort(sue_pwm_input_4);
        packet.payload.putShort(sue_pwm_input_5);
        packet.payload.putShort(sue_pwm_input_6);
        packet.payload.putShort(sue_pwm_input_7);
        packet.payload.putShort(sue_pwm_input_8);
        packet.payload.putShort(sue_pwm_input_9);
        packet.payload.putShort(sue_pwm_input_10);
        packet.payload.putShort(sue_pwm_input_11);
        packet.payload.putShort(sue_pwm_input_12);
        packet.payload.putShort(sue_pwm_output_1);
        packet.payload.putShort(sue_pwm_output_2);
        packet.payload.putShort(sue_pwm_output_3);
        packet.payload.putShort(sue_pwm_output_4);
        packet.payload.putShort(sue_pwm_output_5);
        packet.payload.putShort(sue_pwm_output_6);
        packet.payload.putShort(sue_pwm_output_7);
        packet.payload.putShort(sue_pwm_output_8);
        packet.payload.putShort(sue_pwm_output_9);
        packet.payload.putShort(sue_pwm_output_10);
        packet.payload.putShort(sue_pwm_output_11);
        packet.payload.putShort(sue_pwm_output_12);
        packet.payload.putShort(sue_imu_location_x);
        packet.payload.putShort(sue_imu_location_y);
        packet.payload.putShort(sue_imu_location_z);
        packet.payload.putShort(sue_location_error_earth_x);
        packet.payload.putShort(sue_location_error_earth_y);
        packet.payload.putShort(sue_location_error_earth_z);
        packet.payload.putShort(sue_osc_fails);
        packet.payload.putShort(sue_imu_velocity_x);
        packet.payload.putShort(sue_imu_velocity_y);
        packet.payload.putShort(sue_imu_velocity_z);
        packet.payload.putShort(sue_waypoint_goal_x);
        packet.payload.putShort(sue_waypoint_goal_y);
        packet.payload.putShort(sue_waypoint_goal_z);
        packet.payload.putShort(sue_aero_x);
        packet.payload.putShort(sue_aero_y);
        packet.payload.putShort(sue_aero_z);
        packet.payload.putShort(sue_barom_temp);
        packet.payload.putShort(sue_bat_volt);
        packet.payload.putShort(sue_bat_amp);
        packet.payload.putShort(sue_bat_amp_hours);
        packet.payload.putShort(sue_desired_height);
        packet.payload.putShort(sue_memory_stack_free);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a serial_udb_extra_f2_b message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.sue_time = payload.getUnsignedInt();
        this.sue_flags = payload.getUnsignedInt();
        this.sue_barom_press = payload.getInt();
        this.sue_barom_alt = payload.getInt();
        this.sue_pwm_input_1 = payload.getShort();
        this.sue_pwm_input_2 = payload.getShort();
        this.sue_pwm_input_3 = payload.getShort();
        this.sue_pwm_input_4 = payload.getShort();
        this.sue_pwm_input_5 = payload.getShort();
        this.sue_pwm_input_6 = payload.getShort();
        this.sue_pwm_input_7 = payload.getShort();
        this.sue_pwm_input_8 = payload.getShort();
        this.sue_pwm_input_9 = payload.getShort();
        this.sue_pwm_input_10 = payload.getShort();
        this.sue_pwm_input_11 = payload.getShort();
        this.sue_pwm_input_12 = payload.getShort();
        this.sue_pwm_output_1 = payload.getShort();
        this.sue_pwm_output_2 = payload.getShort();
        this.sue_pwm_output_3 = payload.getShort();
        this.sue_pwm_output_4 = payload.getShort();
        this.sue_pwm_output_5 = payload.getShort();
        this.sue_pwm_output_6 = payload.getShort();
        this.sue_pwm_output_7 = payload.getShort();
        this.sue_pwm_output_8 = payload.getShort();
        this.sue_pwm_output_9 = payload.getShort();
        this.sue_pwm_output_10 = payload.getShort();
        this.sue_pwm_output_11 = payload.getShort();
        this.sue_pwm_output_12 = payload.getShort();
        this.sue_imu_location_x = payload.getShort();
        this.sue_imu_location_y = payload.getShort();
        this.sue_imu_location_z = payload.getShort();
        this.sue_location_error_earth_x = payload.getShort();
        this.sue_location_error_earth_y = payload.getShort();
        this.sue_location_error_earth_z = payload.getShort();
        this.sue_osc_fails = payload.getShort();
        this.sue_imu_velocity_x = payload.getShort();
        this.sue_imu_velocity_y = payload.getShort();
        this.sue_imu_velocity_z = payload.getShort();
        this.sue_waypoint_goal_x = payload.getShort();
        this.sue_waypoint_goal_y = payload.getShort();
        this.sue_waypoint_goal_z = payload.getShort();
        this.sue_aero_x = payload.getShort();
        this.sue_aero_y = payload.getShort();
        this.sue_aero_z = payload.getShort();
        this.sue_barom_temp = payload.getShort();
        this.sue_bat_volt = payload.getShort();
        this.sue_bat_amp = payload.getShort();
        this.sue_bat_amp_hours = payload.getShort();
        this.sue_desired_height = payload.getShort();
        this.sue_memory_stack_free = payload.getShort();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_serial_udb_extra_f2_b() {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F2_B;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_serial_udb_extra_f2_b( long sue_time, long sue_flags, int sue_barom_press, int sue_barom_alt, short sue_pwm_input_1, short sue_pwm_input_2, short sue_pwm_input_3, short sue_pwm_input_4, short sue_pwm_input_5, short sue_pwm_input_6, short sue_pwm_input_7, short sue_pwm_input_8, short sue_pwm_input_9, short sue_pwm_input_10, short sue_pwm_input_11, short sue_pwm_input_12, short sue_pwm_output_1, short sue_pwm_output_2, short sue_pwm_output_3, short sue_pwm_output_4, short sue_pwm_output_5, short sue_pwm_output_6, short sue_pwm_output_7, short sue_pwm_output_8, short sue_pwm_output_9, short sue_pwm_output_10, short sue_pwm_output_11, short sue_pwm_output_12, short sue_imu_location_x, short sue_imu_location_y, short sue_imu_location_z, short sue_location_error_earth_x, short sue_location_error_earth_y, short sue_location_error_earth_z, short sue_osc_fails, short sue_imu_velocity_x, short sue_imu_velocity_y, short sue_imu_velocity_z, short sue_waypoint_goal_x, short sue_waypoint_goal_y, short sue_waypoint_goal_z, short sue_aero_x, short sue_aero_y, short sue_aero_z, short sue_barom_temp, short sue_bat_volt, short sue_bat_amp, short sue_bat_amp_hours, short sue_desired_height, short sue_memory_stack_free) {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F2_B;

        this.sue_time = sue_time;
        this.sue_flags = sue_flags;
        this.sue_barom_press = sue_barom_press;
        this.sue_barom_alt = sue_barom_alt;
        this.sue_pwm_input_1 = sue_pwm_input_1;
        this.sue_pwm_input_2 = sue_pwm_input_2;
        this.sue_pwm_input_3 = sue_pwm_input_3;
        this.sue_pwm_input_4 = sue_pwm_input_4;
        this.sue_pwm_input_5 = sue_pwm_input_5;
        this.sue_pwm_input_6 = sue_pwm_input_6;
        this.sue_pwm_input_7 = sue_pwm_input_7;
        this.sue_pwm_input_8 = sue_pwm_input_8;
        this.sue_pwm_input_9 = sue_pwm_input_9;
        this.sue_pwm_input_10 = sue_pwm_input_10;
        this.sue_pwm_input_11 = sue_pwm_input_11;
        this.sue_pwm_input_12 = sue_pwm_input_12;
        this.sue_pwm_output_1 = sue_pwm_output_1;
        this.sue_pwm_output_2 = sue_pwm_output_2;
        this.sue_pwm_output_3 = sue_pwm_output_3;
        this.sue_pwm_output_4 = sue_pwm_output_4;
        this.sue_pwm_output_5 = sue_pwm_output_5;
        this.sue_pwm_output_6 = sue_pwm_output_6;
        this.sue_pwm_output_7 = sue_pwm_output_7;
        this.sue_pwm_output_8 = sue_pwm_output_8;
        this.sue_pwm_output_9 = sue_pwm_output_9;
        this.sue_pwm_output_10 = sue_pwm_output_10;
        this.sue_pwm_output_11 = sue_pwm_output_11;
        this.sue_pwm_output_12 = sue_pwm_output_12;
        this.sue_imu_location_x = sue_imu_location_x;
        this.sue_imu_location_y = sue_imu_location_y;
        this.sue_imu_location_z = sue_imu_location_z;
        this.sue_location_error_earth_x = sue_location_error_earth_x;
        this.sue_location_error_earth_y = sue_location_error_earth_y;
        this.sue_location_error_earth_z = sue_location_error_earth_z;
        this.sue_osc_fails = sue_osc_fails;
        this.sue_imu_velocity_x = sue_imu_velocity_x;
        this.sue_imu_velocity_y = sue_imu_velocity_y;
        this.sue_imu_velocity_z = sue_imu_velocity_z;
        this.sue_waypoint_goal_x = sue_waypoint_goal_x;
        this.sue_waypoint_goal_y = sue_waypoint_goal_y;
        this.sue_waypoint_goal_z = sue_waypoint_goal_z;
        this.sue_aero_x = sue_aero_x;
        this.sue_aero_y = sue_aero_y;
        this.sue_aero_z = sue_aero_z;
        this.sue_barom_temp = sue_barom_temp;
        this.sue_bat_volt = sue_bat_volt;
        this.sue_bat_amp = sue_bat_amp;
        this.sue_bat_amp_hours = sue_bat_amp_hours;
        this.sue_desired_height = sue_desired_height;
        this.sue_memory_stack_free = sue_memory_stack_free;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_serial_udb_extra_f2_b( long sue_time, long sue_flags, int sue_barom_press, int sue_barom_alt, short sue_pwm_input_1, short sue_pwm_input_2, short sue_pwm_input_3, short sue_pwm_input_4, short sue_pwm_input_5, short sue_pwm_input_6, short sue_pwm_input_7, short sue_pwm_input_8, short sue_pwm_input_9, short sue_pwm_input_10, short sue_pwm_input_11, short sue_pwm_input_12, short sue_pwm_output_1, short sue_pwm_output_2, short sue_pwm_output_3, short sue_pwm_output_4, short sue_pwm_output_5, short sue_pwm_output_6, short sue_pwm_output_7, short sue_pwm_output_8, short sue_pwm_output_9, short sue_pwm_output_10, short sue_pwm_output_11, short sue_pwm_output_12, short sue_imu_location_x, short sue_imu_location_y, short sue_imu_location_z, short sue_location_error_earth_x, short sue_location_error_earth_y, short sue_location_error_earth_z, short sue_osc_fails, short sue_imu_velocity_x, short sue_imu_velocity_y, short sue_imu_velocity_z, short sue_waypoint_goal_x, short sue_waypoint_goal_y, short sue_waypoint_goal_z, short sue_aero_x, short sue_aero_y, short sue_aero_z, short sue_barom_temp, short sue_bat_volt, short sue_bat_amp, short sue_bat_amp_hours, short sue_desired_height, short sue_memory_stack_free, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F2_B;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.sue_time = sue_time;
        this.sue_flags = sue_flags;
        this.sue_barom_press = sue_barom_press;
        this.sue_barom_alt = sue_barom_alt;
        this.sue_pwm_input_1 = sue_pwm_input_1;
        this.sue_pwm_input_2 = sue_pwm_input_2;
        this.sue_pwm_input_3 = sue_pwm_input_3;
        this.sue_pwm_input_4 = sue_pwm_input_4;
        this.sue_pwm_input_5 = sue_pwm_input_5;
        this.sue_pwm_input_6 = sue_pwm_input_6;
        this.sue_pwm_input_7 = sue_pwm_input_7;
        this.sue_pwm_input_8 = sue_pwm_input_8;
        this.sue_pwm_input_9 = sue_pwm_input_9;
        this.sue_pwm_input_10 = sue_pwm_input_10;
        this.sue_pwm_input_11 = sue_pwm_input_11;
        this.sue_pwm_input_12 = sue_pwm_input_12;
        this.sue_pwm_output_1 = sue_pwm_output_1;
        this.sue_pwm_output_2 = sue_pwm_output_2;
        this.sue_pwm_output_3 = sue_pwm_output_3;
        this.sue_pwm_output_4 = sue_pwm_output_4;
        this.sue_pwm_output_5 = sue_pwm_output_5;
        this.sue_pwm_output_6 = sue_pwm_output_6;
        this.sue_pwm_output_7 = sue_pwm_output_7;
        this.sue_pwm_output_8 = sue_pwm_output_8;
        this.sue_pwm_output_9 = sue_pwm_output_9;
        this.sue_pwm_output_10 = sue_pwm_output_10;
        this.sue_pwm_output_11 = sue_pwm_output_11;
        this.sue_pwm_output_12 = sue_pwm_output_12;
        this.sue_imu_location_x = sue_imu_location_x;
        this.sue_imu_location_y = sue_imu_location_y;
        this.sue_imu_location_z = sue_imu_location_z;
        this.sue_location_error_earth_x = sue_location_error_earth_x;
        this.sue_location_error_earth_y = sue_location_error_earth_y;
        this.sue_location_error_earth_z = sue_location_error_earth_z;
        this.sue_osc_fails = sue_osc_fails;
        this.sue_imu_velocity_x = sue_imu_velocity_x;
        this.sue_imu_velocity_y = sue_imu_velocity_y;
        this.sue_imu_velocity_z = sue_imu_velocity_z;
        this.sue_waypoint_goal_x = sue_waypoint_goal_x;
        this.sue_waypoint_goal_y = sue_waypoint_goal_y;
        this.sue_waypoint_goal_z = sue_waypoint_goal_z;
        this.sue_aero_x = sue_aero_x;
        this.sue_aero_y = sue_aero_y;
        this.sue_aero_z = sue_aero_z;
        this.sue_barom_temp = sue_barom_temp;
        this.sue_bat_volt = sue_bat_volt;
        this.sue_bat_amp = sue_bat_amp;
        this.sue_bat_amp_hours = sue_bat_amp_hours;
        this.sue_desired_height = sue_desired_height;
        this.sue_memory_stack_free = sue_memory_stack_free;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_serial_udb_extra_f2_b(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F2_B;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

                                                                                                        
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F2_B - sysid:"+sysid+" compid:"+compid+" sue_time:"+sue_time+" sue_flags:"+sue_flags+" sue_barom_press:"+sue_barom_press+" sue_barom_alt:"+sue_barom_alt+" sue_pwm_input_1:"+sue_pwm_input_1+" sue_pwm_input_2:"+sue_pwm_input_2+" sue_pwm_input_3:"+sue_pwm_input_3+" sue_pwm_input_4:"+sue_pwm_input_4+" sue_pwm_input_5:"+sue_pwm_input_5+" sue_pwm_input_6:"+sue_pwm_input_6+" sue_pwm_input_7:"+sue_pwm_input_7+" sue_pwm_input_8:"+sue_pwm_input_8+" sue_pwm_input_9:"+sue_pwm_input_9+" sue_pwm_input_10:"+sue_pwm_input_10+" sue_pwm_input_11:"+sue_pwm_input_11+" sue_pwm_input_12:"+sue_pwm_input_12+" sue_pwm_output_1:"+sue_pwm_output_1+" sue_pwm_output_2:"+sue_pwm_output_2+" sue_pwm_output_3:"+sue_pwm_output_3+" sue_pwm_output_4:"+sue_pwm_output_4+" sue_pwm_output_5:"+sue_pwm_output_5+" sue_pwm_output_6:"+sue_pwm_output_6+" sue_pwm_output_7:"+sue_pwm_output_7+" sue_pwm_output_8:"+sue_pwm_output_8+" sue_pwm_output_9:"+sue_pwm_output_9+" sue_pwm_output_10:"+sue_pwm_output_10+" sue_pwm_output_11:"+sue_pwm_output_11+" sue_pwm_output_12:"+sue_pwm_output_12+" sue_imu_location_x:"+sue_imu_location_x+" sue_imu_location_y:"+sue_imu_location_y+" sue_imu_location_z:"+sue_imu_location_z+" sue_location_error_earth_x:"+sue_location_error_earth_x+" sue_location_error_earth_y:"+sue_location_error_earth_y+" sue_location_error_earth_z:"+sue_location_error_earth_z+" sue_osc_fails:"+sue_osc_fails+" sue_imu_velocity_x:"+sue_imu_velocity_x+" sue_imu_velocity_y:"+sue_imu_velocity_y+" sue_imu_velocity_z:"+sue_imu_velocity_z+" sue_waypoint_goal_x:"+sue_waypoint_goal_x+" sue_waypoint_goal_y:"+sue_waypoint_goal_y+" sue_waypoint_goal_z:"+sue_waypoint_goal_z+" sue_aero_x:"+sue_aero_x+" sue_aero_y:"+sue_aero_y+" sue_aero_z:"+sue_aero_z+" sue_barom_temp:"+sue_barom_temp+" sue_bat_volt:"+sue_bat_volt+" sue_bat_amp:"+sue_bat_amp+" sue_bat_amp_hours:"+sue_bat_amp_hours+" sue_desired_height:"+sue_desired_height+" sue_memory_stack_free:"+sue_memory_stack_free+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F2_B";
    }
}
        