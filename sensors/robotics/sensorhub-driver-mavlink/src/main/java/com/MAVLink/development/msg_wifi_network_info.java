/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE WIFI_NETWORK_INFO PACKING
package com.MAVLink.development;

import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.Description;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;

/**
 * Detected WiFi network status information. This message is sent per each WiFi network detected in range with known SSID and general status parameters.
 */
public class msg_wifi_network_info extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_WIFI_NETWORK_INFO = 298;
    public static final int MAVLINK_MSG_LENGTH = 37;
    private static final long serialVersionUID = MAVLINK_MSG_ID_WIFI_NETWORK_INFO;

    
    /**
     * WiFi network data rate. Set to UINT16_MAX if data_rate information is not supplied.
     */
    @Description("WiFi network data rate. Set to UINT16_MAX if data_rate information is not supplied.")
    @Units("MiB/s")
    public int data_rate;
    
    /**
     * Name of Wi-Fi network (SSID).
     */
    @Description("Name of Wi-Fi network (SSID).")
    @Units("")
    public byte ssid[] = new byte[32];
    
    /**
     * WiFi network operating channel ID. Set to 0 if unknown or unidentified.
     */
    @Description("WiFi network operating channel ID. Set to 0 if unknown or unidentified.")
    @Units("")
    public short channel_id;
    
    /**
     * WiFi network signal quality.
     */
    @Description("WiFi network signal quality.")
    @Units("%")
    public short signal_quality;
    
    /**
     * WiFi network security type.
     */
    @Description("WiFi network security type.")
    @Units("")
    public short security;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_WIFI_NETWORK_INFO;

        packet.payload.putUnsignedShort(data_rate);
        
        for (int i = 0; i < ssid.length; i++) {
            packet.payload.putByte(ssid[i]);
        }
                    
        packet.payload.putUnsignedByte(channel_id);
        packet.payload.putUnsignedByte(signal_quality);
        packet.payload.putUnsignedByte(security);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a wifi_network_info message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.data_rate = payload.getUnsignedShort();
        
        for (int i = 0; i < this.ssid.length; i++) {
            this.ssid[i] = payload.getByte();
        }
                
        this.channel_id = payload.getUnsignedByte();
        this.signal_quality = payload.getUnsignedByte();
        this.security = payload.getUnsignedByte();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_wifi_network_info() {
        this.msgid = MAVLINK_MSG_ID_WIFI_NETWORK_INFO;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_wifi_network_info( int data_rate, byte[] ssid, short channel_id, short signal_quality, short security) {
        this.msgid = MAVLINK_MSG_ID_WIFI_NETWORK_INFO;

        this.data_rate = data_rate;
        this.ssid = ssid;
        this.channel_id = channel_id;
        this.signal_quality = signal_quality;
        this.security = security;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_wifi_network_info( int data_rate, byte[] ssid, short channel_id, short signal_quality, short security, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_WIFI_NETWORK_INFO;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.data_rate = data_rate;
        this.ssid = ssid;
        this.channel_id = channel_id;
        this.signal_quality = signal_quality;
        this.security = security;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_wifi_network_info(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_WIFI_NETWORK_INFO;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

       
    /**
    * Sets the buffer of this message with a string, adds the necessary padding
    */
    public void setSsid(String str) {
        int len = Math.min(str.length(), 32);
        for (int i=0; i<len; i++) {
            ssid[i] = (byte) str.charAt(i);
        }

        for (int i=len; i<32; i++) {            // padding for the rest of the buffer
            ssid[i] = 0;
        }
    }

    /**
    * Gets the message, formatted as a string
    */
    public String getSsid() {
        StringBuffer buf = new StringBuffer();
        for (int i = 0; i < 32; i++) {
            if (ssid[i] != 0)
                buf.append((char) ssid[i]);
            else
                break;
        }
        return buf.toString();

    }
                               
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_WIFI_NETWORK_INFO - sysid:"+sysid+" compid:"+compid+" data_rate:"+data_rate+" ssid:"+ssid+" channel_id:"+channel_id+" signal_quality:"+signal_quality+" security:"+security+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_WIFI_NETWORK_INFO";
    }
}
        