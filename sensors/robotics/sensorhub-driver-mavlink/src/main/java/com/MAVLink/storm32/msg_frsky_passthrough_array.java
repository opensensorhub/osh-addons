/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE FRSKY_PASSTHROUGH_ARRAY PACKING
package com.MAVLink.storm32;

import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.Description;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;

/**
 * Frsky SPort passthrough multi packet container.
 */
public class msg_frsky_passthrough_array extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_FRSKY_PASSTHROUGH_ARRAY = 60040;
    public static final int MAVLINK_MSG_LENGTH = 245;
    private static final long serialVersionUID = MAVLINK_MSG_ID_FRSKY_PASSTHROUGH_ARRAY;

    
    /**
     * Timestamp (time since system boot).
     */
    @Description("Timestamp (time since system boot).")
    @Units("ms")
    public long time_boot_ms;
    
    /**
     * Number of passthrough packets in this message.
     */
    @Description("Number of passthrough packets in this message.")
    @Units("")
    public short count;
    
    /**
     * Passthrough packet buffer. A packet has 6 bytes: uint16_t id + uint32_t data. The array has space for 40 packets.
     */
    @Description("Passthrough packet buffer. A packet has 6 bytes: uint16_t id + uint32_t data. The array has space for 40 packets.")
    @Units("")
    public short packet_buf[] = new short[240];
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_FRSKY_PASSTHROUGH_ARRAY;

        packet.payload.putUnsignedInt(time_boot_ms);
        packet.payload.putUnsignedByte(count);
        
        for (int i = 0; i < packet_buf.length; i++) {
            packet.payload.putUnsignedByte(packet_buf[i]);
        }
                    
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a frsky_passthrough_array message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.time_boot_ms = payload.getUnsignedInt();
        this.count = payload.getUnsignedByte();
        
        for (int i = 0; i < this.packet_buf.length; i++) {
            this.packet_buf[i] = payload.getUnsignedByte();
        }
                
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_frsky_passthrough_array() {
        this.msgid = MAVLINK_MSG_ID_FRSKY_PASSTHROUGH_ARRAY;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_frsky_passthrough_array( long time_boot_ms, short count, short[] packet_buf) {
        this.msgid = MAVLINK_MSG_ID_FRSKY_PASSTHROUGH_ARRAY;

        this.time_boot_ms = time_boot_ms;
        this.count = count;
        this.packet_buf = packet_buf;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_frsky_passthrough_array( long time_boot_ms, short count, short[] packet_buf, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_FRSKY_PASSTHROUGH_ARRAY;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.time_boot_ms = time_boot_ms;
        this.count = count;
        this.packet_buf = packet_buf;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_frsky_passthrough_array(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_FRSKY_PASSTHROUGH_ARRAY;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

          
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_FRSKY_PASSTHROUGH_ARRAY - sysid:"+sysid+" compid:"+compid+" time_boot_ms:"+time_boot_ms+" count:"+count+" packet_buf:"+packet_buf+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_FRSKY_PASSTHROUGH_ARRAY";
    }
}
        