/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE SERIAL_UDB_EXTRA_F5 PACKING
package com.MAVLink.matrixpilot;

import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.Description;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;

/**
 * Backwards compatible version of SERIAL_UDB_EXTRA F5: format
 */
public class msg_serial_udb_extra_f5 extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F5 = 173;
    public static final int MAVLINK_MSG_LENGTH = 16;
    private static final long serialVersionUID = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F5;

    
    /**
     * Serial UDB YAWKP_AILERON Gain for Proporional control of navigation
     */
    @Description("Serial UDB YAWKP_AILERON Gain for Proporional control of navigation")
    @Units("")
    public float sue_YAWKP_AILERON;
    
    /**
     * Serial UDB YAWKD_AILERON Gain for Rate control of navigation
     */
    @Description("Serial UDB YAWKD_AILERON Gain for Rate control of navigation")
    @Units("")
    public float sue_YAWKD_AILERON;
    
    /**
     * Serial UDB Extra ROLLKP Gain for Proportional control of roll stabilization
     */
    @Description("Serial UDB Extra ROLLKP Gain for Proportional control of roll stabilization")
    @Units("")
    public float sue_ROLLKP;
    
    /**
     * Serial UDB Extra ROLLKD Gain for Rate control of roll stabilization
     */
    @Description("Serial UDB Extra ROLLKD Gain for Rate control of roll stabilization")
    @Units("")
    public float sue_ROLLKD;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F5;

        packet.payload.putFloat(sue_YAWKP_AILERON);
        packet.payload.putFloat(sue_YAWKD_AILERON);
        packet.payload.putFloat(sue_ROLLKP);
        packet.payload.putFloat(sue_ROLLKD);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a serial_udb_extra_f5 message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.sue_YAWKP_AILERON = payload.getFloat();
        this.sue_YAWKD_AILERON = payload.getFloat();
        this.sue_ROLLKP = payload.getFloat();
        this.sue_ROLLKD = payload.getFloat();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_serial_udb_extra_f5() {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F5;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_serial_udb_extra_f5( float sue_YAWKP_AILERON, float sue_YAWKD_AILERON, float sue_ROLLKP, float sue_ROLLKD) {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F5;

        this.sue_YAWKP_AILERON = sue_YAWKP_AILERON;
        this.sue_YAWKD_AILERON = sue_YAWKD_AILERON;
        this.sue_ROLLKP = sue_ROLLKP;
        this.sue_ROLLKD = sue_ROLLKD;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_serial_udb_extra_f5( float sue_YAWKP_AILERON, float sue_YAWKD_AILERON, float sue_ROLLKP, float sue_ROLLKD, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F5;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.sue_YAWKP_AILERON = sue_YAWKP_AILERON;
        this.sue_YAWKD_AILERON = sue_YAWKD_AILERON;
        this.sue_ROLLKP = sue_ROLLKP;
        this.sue_ROLLKD = sue_ROLLKD;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_serial_udb_extra_f5(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F5;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

            
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F5 - sysid:"+sysid+" compid:"+compid+" sue_YAWKP_AILERON:"+sue_YAWKP_AILERON+" sue_YAWKD_AILERON:"+sue_YAWKD_AILERON+" sue_ROLLKP:"+sue_ROLLKP+" sue_ROLLKD:"+sue_ROLLKD+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_SERIAL_UDB_EXTRA_F5";
    }
}
        